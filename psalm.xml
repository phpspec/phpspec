<?xml version="1.0"?>
<psalm
    errorLevel="4"
    resolveFromConfigFile="true"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="https://getpsalm.org/schema/config"
    xsi:schemaLocation="https://getpsalm.org/schema/config vendor/vimeo/psalm/config.xsd"
>
    <projectFiles>
        <directory name="src" />
        <ignoreFiles>
            <directory name="vendor" />
        </ignoreFiles>
    </projectFiles>
    <issueHandlers>
        <DuplicateClass>
            <errorLevel type="suppress">
                <!-- duplicate classes are inside a conditional so not an error -->
                <file name="src/PhpSpec/Event/BaseEvent.php" />
            </errorLevel>
        </DuplicateClass>
        <UndefinedConstant>
            <errorLevel type="suppress">
                <!-- new token constants in PHP 8 cause an error, despite being behind version detection -->
                <file name="src/PhpSpec/CodeAnalysis/TokenizedTypeHintRewriter.php" />
                <file name="src/PhpSpec/Locator/PSR0/PSR0Locator.php" />
            </errorLevel>
        </UndefinedConstant>
        <InvalidCatch>
            <errorLevel type="suppress">
                <!-- Prophecy's exception interface does not extend throwable -->
                <referencedClass name="Prophecy\Exception\Prediction\PredictionException"/>
            </errorLevel>
        </InvalidCatch>
        <InvalidArgument>
            <errorLevel type="suppress">
                <!-- Error from symfony BC code -->
                <referencedFunction name="Symfony\Contracts\EventDispatcher\EventDispatcherInterface::dispatch"></referencedFunction>
                <referencedFunction name="Symfony\Component\EventDispatcher\EventDispatcher::dispatch"></referencedFunction>
            </errorLevel>
        </InvalidArgument>
        <TypeDoesNotContainType>
            <errorLevel type="suppress">
                <!-- Psalm error see https://github.com/vimeo/psalm/issues/5001 -->
                <file name="src/PhpSpec/CodeAnalysis/TokenizedNamespaceResolver.php"/>
                <!-- Psalm error see https://github.com/vimeo/psalm/issues/5004 -->
                <file name="src/PhpSpec/Matcher/TriggerMatcher.php"/>
            </errorLevel>
        </TypeDoesNotContainType>
        <RedundantCondition>
            <errorLevel type="suppress">
                <!-- Psalm error see https://github.com/vimeo/psalm/issues/5004 -->
                <file name="src/PhpSpec/Matcher/TriggerMatcher.php"/>
            </errorLevel>
        </RedundantCondition>
        <TooManyArguments>
            <errorLevel type="suppress">
                <!-- Adding extra argument to interface would break backwards compatibility -->
                <referencedFunction name="PhpSpec\Wrapper\Subject\Expectation\Expectation::match"/>
            </errorLevel>
        </TooManyArguments>
        <InvalidReturnType>
            <errorLevel type="suppress">
                <!-- To avoid incompatibility with the parent interface (offsetExists) -->
                <file name="src/PhpSpec/ObjectBehavior.php"/>
            </errorLevel>
        </InvalidReturnType>
        <InvalidReturnStatement>
            <errorLevel type="suppress">
                <!-- To avoid incompatibility with the parent interface (offsetExists) -->
                <file name="src/PhpSpec/ObjectBehavior.php"/>
            </errorLevel>
        </InvalidReturnStatement>
        <ImplementedReturnTypeMismatch>
            <errorLevel type="suppress">
                <!-- To avoid incompatibility with the parent interface (offsetExists) -->
                <file name="src/PhpSpec/Wrapper/Subject.php"/>
            </errorLevel>
        </ImplementedReturnTypeMismatch>
    </issueHandlers>
</psalm>
